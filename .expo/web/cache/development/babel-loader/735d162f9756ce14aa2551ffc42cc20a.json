{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { createContext, useEffect, useReducer } from \"react\";\nimport loginApi from \"../api/loginApi\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { authReducer } from \"./AuthReducer\";\nvar AuthInitialState = {\n  status: 'cheking',\n  errorMessage: '',\n  token: null,\n  user: null\n};\nexport var AuthContext = createContext({});\nexport var AuthProvider = function AuthProvider(_ref) {\n  var children = _ref.children;\n\n  var _useReducer = useReducer(authReducer, AuthInitialState),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  useEffect(function () {\n    checkToken();\n  }, []);\n\n  var checkToken = function checkToken() {\n    var token, resp;\n    return _regeneratorRuntime.async(function checkToken$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('token'));\n\n          case 2:\n            token = _context.sent;\n\n            if (token) {\n              _context.next = 5;\n              break;\n            }\n\n            return _context.abrupt(\"return\", dispatch({\n              type: 'notAuthenticated'\n            }));\n\n          case 5:\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(loginApi.get('/auth'));\n\n          case 7:\n            resp = _context.sent;\n\n            if (!(resp.status !== 200)) {\n              _context.next = 10;\n              break;\n            }\n\n            return _context.abrupt(\"return\", dispatch({\n              type: 'notAuthenticated'\n            }));\n\n          case 10:\n            dispatch({\n              type: 'signUp',\n              payload: {\n                token: resp.data.token,\n                user: resp.data.usuario\n              }\n            });\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var signIn = function signIn(_ref2) {\n    var email, password, _await$loginApi$post, data;\n\n    return _regeneratorRuntime.async(function signIn$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            email = _ref2.email, password = _ref2.password;\n            _context2.prev = 1;\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(loginApi.post('/login', {\n              email: '',\n              password: ''\n            }));\n\n          case 4:\n            _await$loginApi$post = _context2.sent;\n            data = _await$loginApi$post.data;\n            dispatch({\n              type: 'signUp',\n              payload: {\n                token: data.token,\n                user: data.usuario\n              }\n            });\n            _context2.next = 9;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('@token', data.token));\n\n          case 9:\n            _context2.next = 15;\n            break;\n\n          case 11:\n            _context2.prev = 11;\n            _context2.t0 = _context2[\"catch\"](1);\n            console.log(_context2.t0.response.data);\n            dispatch({\n              type: 'addError',\n              payload: _context2.t0.response.data.message || 'InformaciÃ³n incorrecta'\n            });\n\n          case 15:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[1, 11]], Promise);\n  };\n\n  var signUp = function signUp() {};\n\n  var logOut = function logOut() {};\n\n  var removeError = function removeError() {\n    dispatch({\n      type: 'removeError'\n    });\n  };\n\n  return React.createElement(AuthContext.Provider, {\n    value: _objectSpread(_objectSpread({}, state), {}, {\n      signUp: signUp,\n      signIn: signIn,\n      logOut: logOut,\n      removeError: removeError\n    })\n  }, children);\n};","map":{"version":3,"sources":["C:/Users/Memo/Documents/TicsExpo/MonitoreoDeClimaCostero/ExpoTics/src/context/authContext.tsx"],"names":["React","createContext","useEffect","useReducer","loginApi","AsyncStorage","authReducer","AuthInitialState","status","errorMessage","token","user","AuthContext","AuthProvider","children","state","dispatch","checkToken","getItem","type","get","resp","payload","data","usuario","signIn","email","password","post","setItem","console","log","response","message","signUp","logOut","removeError"],"mappings":"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","sourcesContent":["import React, { createContext, useEffect, useReducer } from \"react\";\r\nimport loginApi from \"../api/loginApi\";\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { Usuario, LoginRresponse, LoginData } from '../interfaces/UsuarioInterface';\r\nimport { authReducer, AuthState } from \"./AuthReducer\";\r\n\r\ntype AutchContextProps = {\r\n    errorMessage: string;\r\n    token: string|null;\r\n    user: Usuario|null;\r\n    status: 'cheking' | 'authenticated' | 'unauthenticated';\r\n    signUp: () => void;\r\n    signIn: (loginData: LoginData) => void;\r\n    logOut: () => void;\r\n    removeError: () => void;\r\n}\r\n\r\nconst AuthInitialState: AuthState = {\r\n    status: 'cheking',\r\n    errorMessage: '',\r\n    token: null,\r\n    user: null\r\n}\r\n\r\nexport const AuthContext = createContext({} as AutchContextProps);\r\n\r\nexport const AuthProvider = ({ children }: any) => {\r\n\r\n    const [state, dispatch] = useReducer(authReducer, AuthInitialState)\r\n\r\n    useEffect(() => {\r\n        checkToken();\r\n    }, [])\r\n\r\n    const checkToken = async () => {\r\n        const token = await AsyncStorage.getItem('token');\r\n        if (!token) return dispatch({ type: 'notAuthenticated' });\r\n\r\n        const resp = await loginApi.get<LoginRresponse>('/auth');\r\n        \r\n        if (resp.status !== 200) {\r\n            return dispatch({ type: 'notAuthenticated' });\r\n        }\r\n\r\n        dispatch({\r\n            type: 'signUp',\r\n            payload: {\r\n                token: resp.data.token,\r\n                user: resp.data.usuario\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    const signIn = async({email, password}: LoginData) => {\r\n        try {\r\n            const { data } = await loginApi.post<LoginRresponse>('/login', {\r\n                email: '',\r\n                password: '',  \r\n            });\r\n            dispatch({\r\n                type: 'signUp',\r\n                payload: {\r\n                    token: data.token,\r\n                    user: data.usuario\r\n                }\r\n            });\r\n            await AsyncStorage.setItem('@token', data.token);\r\n        } catch (error) {\r\n            console.log(error.response.data);\r\n            dispatch({\r\n                type: 'addError',\r\n                payload: error.response.data.message || 'InformaciÃ³n incorrecta'\r\n            })\r\n                    \r\n        }\r\n    };\r\n\r\n    const signUp = () => {};\r\n    \r\n    const logOut = () => {};\r\n    const removeError = () => {\r\n        dispatch({\r\n            type: 'removeError'\r\n        })\r\n    };\r\n\r\n    return(\r\n        <AuthContext.Provider value = {{\r\n            ...state,\r\n            signUp,\r\n            signIn,\r\n            logOut,\r\n            removeError,\r\n        }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}