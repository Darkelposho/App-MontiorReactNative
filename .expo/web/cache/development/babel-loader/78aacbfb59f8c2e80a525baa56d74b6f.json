{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { DataStyles } from \"../theme/appTheme\";\nimport { getDistance } from 'geolib';\nimport { useLocation } from \"../hooks/useLocation\";\nimport { Ionicons, FontAwesome5, Feather } from '@expo/vector-icons';\nexport var ClimateData = function ClimateData(_ref) {\n  var channel = _ref.channel,\n      feeds = _ref.feeds;\n\n  var _useLocation = useLocation(),\n      location = _useLocation.location,\n      errorMsg = _useLocation.errorMsg;\n\n  var text = 'Waiting..';\n\n  if (errorMsg) {\n    text = errorMsg;\n  } else if (location) {\n    text = JSON.stringify(location);\n  }\n\n  var showAlert = function showAlert() {\n    return _regeneratorRuntime.async(function showAlert$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(Alert.alert('Costa Peligrosa', 'Dirigase a un lugar seguro', [{\n              text: 'Cancel',\n              onPress: function onPress() {\n                return console.log('Cancel Pressed');\n              },\n              style: 'cancel'\n            }, {\n              text: 'OK',\n              onPress: function onPress() {\n                return console.log('OK Pressed');\n              }\n            }], {\n              cancelable: false\n            }));\n\n          case 3:\n            _context.next = 8;\n            break;\n\n          case 5:\n            _context.prev = 5;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  };\n\n  var calculateDistance = function calculateDistance() {\n    var dis = getDistance({\n      latitude: channel.latitude,\n      longitude: channel.longitude\n    }, {\n      latitude: location.latitude,\n      longitude: location.longitude\n    });\n    return dis / 1000;\n  };\n\n  var date = function date(dateStr) {\n    return new Date(dateStr).getTime();\n  };\n\n  if (parseFloat(feeds.field3) >= 15 || parseFloat(feeds.field3) <= 9) {\n    showAlert();\n  }\n\n  return React.createElement(View, {\n    style: DataStyles.globalMargin\n  }, React.createElement(View, {\n    style: DataStyles.channelData\n  }, React.createElement(View, {\n    style: DataStyles.containerDistance\n  }, React.createElement(Text, {\n    style: DataStyles.title\n  }, \"Fecha de actualizacion: \", feeds.created_at)), React.createElement(View, {\n    style: DataStyles.containerDistance\n  }, React.createElement(Text, {\n    style: DataStyles.title\n  }, \"Distancia del equipo: \", calculateDistance(), \" Km\"))), React.createElement(View, {\n    style: DataStyles.container\n  }, React.createElement(View, {\n    style: DataStyles.feedData1\n  }, React.createElement(View, {\n    style: DataStyles.tempContainer\n  }, React.createElement(FontAwesome5, {\n    name: \"temperature-low\",\n    size: 24,\n    color: \"white\"\n  }), React.createElement(Text, {\n    style: DataStyles.feedDataText\n  }, \"Temperatura: \", feeds.field5, \"\\xB0C\")), React.createElement(View, {\n    style: DataStyles.humContainer\n  }, React.createElement(Ionicons, {\n    name: \"water-outline\",\n    size: 24,\n    color: \"white\"\n  }), React.createElement(Text, {\n    style: DataStyles.feedDataText\n  }, \"Humedad: \", feeds.field6, \"%\"))), React.createElement(View, {\n    style: DataStyles.feedData2\n  }, React.createElement(View, {\n    style: DataStyles.aguContainer\n  }, React.createElement(FontAwesome5, {\n    name: \"water\",\n    size: 24,\n    color: \"white\"\n  }), React.createElement(Text, {\n    style: DataStyles.feedDataText\n  }, \"Nivel de Agua Promedio: \", feeds.field3, \" Cm\")), React.createElement(View, {\n    style: DataStyles.vieContainer\n  }, React.createElement(Feather, {\n    name: \"wind\",\n    size: 24,\n    color: \"white\"\n  }), React.createElement(Text, {\n    style: DataStyles.feedDataText\n  }, \"Vientos: \", feeds.field4, \" Km/h\")))));\n};","map":{"version":3,"sources":["C:/Users/Memo/Documents/TicsExpo/definitivo/MonitoreoDeClimaCostero/ExpoTics/src/components/ClimateData.tsx"],"names":["React","DataStyles","getDistance","useLocation","Ionicons","FontAwesome5","Feather","ClimateData","channel","feeds","location","errorMsg","text","JSON","stringify","showAlert","Alert","alert","onPress","console","log","style","cancelable","calculateDistance","dis","latitude","longitude","date","dateStr","Date","getTime","parseFloat","field3","globalMargin","channelData","containerDistance","title","created_at","container","feedData1","tempContainer","feedDataText","field5","humContainer","field6","feedData2","aguContainer","vieContainer","field4"],"mappings":";AAAA,OAAOA,KAAP,MAAiC,OAAjC;;;;AAGA,SAASC,UAAT;AACA,SAASC,WAAT,QAA4B,QAA5B;AACA,SAASC,WAAT;AACA,SAASC,QAAT,EAAmBC,YAAnB,EAAiCC,OAAjC,QAAgD,oBAAhD;AAOA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAwC;AAAA,MAAtCC,OAAsC,QAAtCA,OAAsC;AAAA,MAA7BC,KAA6B,QAA7BA,KAA6B;;AAE/D,qBAA6BN,WAAW,EAAxC;AAAA,MAAOO,QAAP,gBAAOA,QAAP;AAAA,MAAiBC,QAAjB,gBAAiBA,QAAjB;;AAEA,MAAIC,IAAI,GAAG,WAAX;;AACA,MAAID,QAAJ,EAAc;AACVC,IAAAA,IAAI,GAAGD,QAAP;AACH,GAFD,MAEO,IAAID,QAAJ,EAAc;AACjBE,IAAAA,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAeJ,QAAf,CAAP;AACH;;AAED,MAAMK,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEJC,KAAK,CAACC,KAAN,CACF,iBADE,EAEF,4BAFE,EAGF,CACI;AACIL,cAAAA,IAAI,EAAE,QADV;AAEIM,cAAAA,OAAO,EAAE;AAAA,uBAAMC,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAAN;AAAA,eAFb;AAGIC,cAAAA,KAAK,EAAE;AAHX,aADJ,EAMI;AAAET,cAAAA,IAAI,EAAE,IAAR;AAAcM,cAAAA,OAAO,EAAE;AAAA,uBAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AAAA;AAAvB,aANJ,CAHE,EAWF;AAAEE,cAAAA,UAAU,EAAE;AAAd,aAXE,CAFI;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAgBVH,YAAAA,OAAO,CAACC,GAAR;;AAhBU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAoBA,MAAMG,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC5B,QAAIC,GAAG,GAAGtB,WAAW,CACjB;AAAEuB,MAAAA,QAAQ,EAAEjB,OAAO,CAACiB,QAApB;AAA8BC,MAAAA,SAAS,EAAElB,OAAO,CAACkB;AAAjD,KADiB,EAEjB;AAAED,MAAAA,QAAQ,EAAEf,QAAQ,CAACe,QAArB;AAAgCC,MAAAA,SAAS,EAAEhB,QAAQ,CAACgB;AAApD,KAFiB,CAArB;AAIA,WAAOF,GAAG,GAAC,IAAX;AACH,GAND;;AAQA,MAAMG,IAAI,GAAG,SAAPA,IAAO,CAACC,OAAD,EAAkB;AAC3B,WAAO,IAAIC,IAAJ,CAASD,OAAT,EAAkBE,OAAlB,EAAP;AACH,GAFD;;AAIA,MAAIC,UAAU,CAACtB,KAAK,CAACuB,MAAP,CAAV,IAA0B,EAA1B,IAAgCD,UAAU,CAACtB,KAAK,CAACuB,MAAP,CAAV,IAA0B,CAA9D,EAAiE;AAC7DjB,IAAAA,SAAS;AACZ;;AAED,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAId,UAAU,CAACgC;AAA1B,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIhC,UAAU,CAACiC;AAA1B,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEjC,UAAU,CAACkC;AAAxB,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAElC,UAAU,CAACmC;AAAxB,iCAAwD3B,KAAK,CAAC4B,UAA9D,CADJ,CADJ,EAKI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEpC,UAAU,CAACkC;AAAxB,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAElC,UAAU,CAACmC;AAAxB,+BAAsDb,iBAAiB,EAAvE,QADJ,CALJ,CADJ,EAWI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAItB,UAAU,CAACqC;AAA1B,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIrC,UAAU,CAACsC;AAA1B,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEtC,UAAU,CAACuC;AAAxB,KACI,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,iBAAnB;AAAqC,IAAA,IAAI,EAAE,EAA3C;AAAgD,IAAA,KAAK,EAAC;AAAtD,IADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEvC,UAAU,CAACwC;AAAxB,sBAAoDhC,KAAK,CAACiC,MAA1D,UAFJ,CADJ,EAKI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEzC,UAAU,CAAC0C;AAAxB,KACI,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAC,eAAf;AAA+B,IAAA,IAAI,EAAE,EAArC;AAAyC,IAAA,KAAK,EAAC;AAA/C,IADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE1C,UAAU,CAACwC;AAAxB,kBAAgDhC,KAAK,CAACmC,MAAtD,MAFJ,CALJ,CADJ,EAWI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI3C,UAAU,CAAC4C;AAA1B,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE5C,UAAU,CAAC6C;AAAxB,KACI,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,OAAnB;AAA2B,IAAA,IAAI,EAAE,EAAjC;AAAqC,IAAA,KAAK,EAAC;AAA3C,IADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE7C,UAAU,CAACwC;AAAxB,iCAA+DhC,KAAK,CAACuB,MAArE,QAFJ,CADJ,EAKI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE/B,UAAU,CAAC8C;AAAxB,KACI,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAC,MAAd;AAAqB,IAAA,IAAI,EAAE,EAA3B;AAA+B,IAAA,KAAK,EAAC;AAArC,IADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE9C,UAAU,CAACwC;AAAxB,kBAAgDhC,KAAK,CAACuC,MAAtD,UAFJ,CALJ,CAXJ,CAXJ,CADJ;AAqCH,CApFM","sourcesContent":["import React, { Component } from 'react'\r\nimport { Channel, Feed } from '../interfaces/ClimateInterface';\r\nimport { Alert, Text, View } from 'react-native';\r\nimport { DataStyles, styles } from '../theme/appTheme';\r\nimport { getDistance } from 'geolib';\r\nimport { useLocation } from '../hooks/useLocation';\r\nimport { Ionicons, FontAwesome5, Feather } from '@expo/vector-icons'; \r\n\r\ninterface ClimateDataProps { \r\n    channel: Channel;\r\n    feeds: Feed;\r\n}\r\n\r\nexport const ClimateData = ({channel, feeds}: ClimateDataProps) => {\r\n\r\n    const {location, errorMsg} = useLocation();\r\n    \r\n    let text = 'Waiting..';\r\n    if (errorMsg) {\r\n        text = errorMsg;\r\n    } else if (location) {\r\n        text = JSON.stringify(location);\r\n    }\r\n\r\n    const showAlert = async () => {\r\n        try{\r\n            await Alert.alert(\r\n                'Costa Peligrosa',\r\n                'Dirigase a un lugar seguro',\r\n                [\r\n                    {\r\n                        text: 'Cancel',\r\n                        onPress: () => console.log('Cancel Pressed'),\r\n                        style: 'cancel',\r\n                    },\r\n                    { text: 'OK', onPress: () => console.log('OK Pressed') },\r\n                ],\r\n                { cancelable: false },\r\n            );\r\n        }catch(error){\r\n            console.log(error);\r\n        }\r\n    }\r\n    \r\n    const calculateDistance = () => {\r\n        var dis = getDistance(\r\n            { latitude: channel.latitude, longitude: channel.longitude },\r\n            { latitude: location.latitude , longitude: location.longitude }   \r\n          );\r\n        return dis/1000;\r\n    }\r\n\r\n    const date = (dateStr: any) => {\r\n        return new Date(dateStr).getTime();\r\n    }\r\n\r\n    if (parseFloat(feeds.field3)>=15 || parseFloat(feeds.field3)<=9) {\r\n        showAlert();\r\n    }\r\n\r\n    return (\r\n        <View style = {DataStyles.globalMargin}> \r\n            <View style = {DataStyles.channelData}>\r\n                <View style={DataStyles.containerDistance}>  \r\n                    <Text style={DataStyles.title}>Fecha de actualizacion: {feeds.created_at}</Text>\r\n                </View>\r\n                \r\n                <View style={DataStyles.containerDistance}>\r\n                    <Text style={DataStyles.title}>Distancia del equipo: {calculateDistance()} Km</Text>\r\n                </View>\r\n                \r\n            </View>\r\n            <View style = {DataStyles.container}>\r\n                <View style = {DataStyles.feedData1}>\r\n                    <View style={DataStyles.tempContainer}>\r\n                        <FontAwesome5 name=\"temperature-low\" size={24}  color=\"white\" />\r\n                        <Text style={DataStyles.feedDataText}>Temperatura: {feeds.field5}°C</Text> \r\n                    </View>\r\n                    <View style={DataStyles.humContainer}> \r\n                        <Ionicons name=\"water-outline\" size={24} color=\"white\" />\r\n                        <Text style={DataStyles.feedDataText}>Humedad: {feeds.field6}%</Text> \r\n                    </View>\r\n                </View>\r\n                <View style = {DataStyles.feedData2}>\r\n                    <View style={DataStyles.aguContainer}>\r\n                        <FontAwesome5 name=\"water\" size={24} color=\"white\" />\r\n                        <Text style={DataStyles.feedDataText}>Nivel de Agua Promedio: {feeds.field3} Cm</Text>\r\n                    </View>\r\n                    <View style={DataStyles.vieContainer}>\r\n                        <Feather name=\"wind\" size={24} color=\"white\" />\r\n                        <Text style={DataStyles.feedDataText}>Vientos: {feeds.field4} Km/h</Text>\r\n                    </View>\r\n                </View>\r\n            </View>\r\n           \r\n        </View>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}