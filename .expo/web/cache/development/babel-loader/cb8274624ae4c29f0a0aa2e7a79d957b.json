{"ast":null,"code":"import React, { useContext } from 'react';\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { TextInput, TouchableOpacity } from 'react-native-gesture-handler';\nimport { Backgound } from \"../components/Backgound\";\nimport { Logo } from \"../components/Logo\";\nimport { loginStyles } from \"../theme/appTheme\";\nimport { useForm } from \"../hooks/useForm\";\nimport { AuthContext } from \"../context/authContext\";\n;\nexport var LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(AuthContext),\n      signIn = _useContext.signIn;\n\n  var _useForm = useForm({\n    email: '',\n    password: ''\n  }),\n      email = _useForm.email,\n      password = _useForm.password,\n      onChange = _useForm.onChange;\n\n  var onLoginPress = function onLoginPress() {\n    console.log({\n      email: email,\n      password: password\n    });\n    Keyboard.dismiss();\n    signIn({\n      email: email,\n      password: password\n    });\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Backgound, null), React.createElement(KeyboardAvoidingView, {\n    style: loginStyles.container,\n    behavior: Platform.OS === 'ios' ? 'padding' : 'height'\n  }, React.createElement(Logo, null), React.createElement(Text, {\n    style: loginStyles.title\n  }, \"Inicio de sesion\"), React.createElement(Text, {\n    style: loginStyles.label\n  }, \"Email:\"), React.createElement(TextInput, {\n    style: loginStyles.input,\n    placeholder: \"Ingrese su email:\",\n    placeholderTextColor: \"white\",\n    underlineColorAndroid: \"white\",\n    onChangeText: function onChangeText(text) {\n      return onChange(text, 'email');\n    },\n    value: email,\n    color: \"white\",\n    selectionColor: \"white\",\n    onSubmitEditing: onLoginPress,\n    autoCapitalize: \"none\",\n    autoCorrect: false\n  }), React.createElement(Text, {\n    style: loginStyles.label\n  }, \"Contrase\\xF1a:\"), React.createElement(TextInput, {\n    style: loginStyles.input,\n    placeholder: \"******\",\n    placeholderTextColor: \"white\",\n    underlineColorAndroid: \"white\",\n    secureTextEntry: true,\n    onChangeText: function onChangeText(text) {\n      return onChange(text, 'password');\n    },\n    value: password,\n    selectionColor: \"white\",\n    onSubmitEditing: onLoginPress,\n    autoCapitalize: \"none\",\n    autoCorrect: false\n  }), React.createElement(View, {\n    style: loginStyles.buttonContainer\n  }, React.createElement(TouchableOpacity, {\n    style: loginStyles.button,\n    onPress: function onPress() {\n      return navigation.navigate('MenuScreen');\n    }\n  }, React.createElement(Text, {\n    style: loginStyles.buttonText\n  }, \"Iniciar Sesion\"))), React.createElement(View, {\n    style: loginStyles.buttonContainer\n  }, React.createElement(TouchableOpacity, {\n    style: loginStyles.button,\n    onPress: function onPress() {\n      return navigation.navigate('RegisterScreen');\n    }\n  }, React.createElement(Text, {\n    style: loginStyles.buttonText\n  }, \"Nueva Cuenta\")))));\n};","map":{"version":3,"sources":["C:/Users/Memo/Documents/TicsExpo/MonitoreoDeClimaCostero/ExpoTics/src/screens/LoginScreen.tsx"],"names":["React","useContext","TextInput","TouchableOpacity","Backgound","Logo","loginStyles","useForm","AuthContext","LoginScreen","navigation","signIn","email","password","onChange","onLoginPress","console","log","Keyboard","dismiss","container","Platform","OS","title","label","input","text","buttonContainer","button","navigate","buttonText"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react'\r\nimport { Keyboard, KeyboardAvoidingView, Platform, Text, View } from 'react-native';\r\nimport { TextInput, TouchableOpacity } from 'react-native-gesture-handler';\r\nimport { Backgound } from '../components/Backgound';\r\nimport { Logo } from '../components/Logo';\r\nimport { loginStyles } from '../theme/appTheme';\r\nimport { useForm } from '../hooks/useForm';\r\nimport { StackScreenProps } from '@react-navigation/stack';\r\nimport { AuthContext } from '../context/authContext';\r\n\r\ninterface Props extends StackScreenProps<any, any>{};\r\n\r\nexport const LoginScreen = ({ navigation }: Props ) => {\r\n\r\n    const{signIn} = useContext(AuthContext);\r\n\r\n    const {email, password, onChange} = useForm ({\r\n        email: '',\r\n        password: '',\r\n    });\r\n\r\n    const onLoginPress = () => {\r\n        /* navigation.navigate('MenuScreen'); */\r\n        console.log({email, password});\r\n        Keyboard.dismiss();\r\n\r\n        signIn({email, password});\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* Background */}\r\n            <Backgound/>\r\n\r\n            <KeyboardAvoidingView \r\n                style={loginStyles.container} \r\n                behavior={Platform.OS === 'ios' ? 'padding' : 'height'}>\r\n                {/* Keyboard avoid view */}\r\n                <Logo/>\r\n                <Text style={ loginStyles.title }>Inicio de sesion</Text>\r\n\r\n                <Text style={ loginStyles.label }>Email:</Text>\r\n                <TextInput style={loginStyles.input} \r\n                    placeholder=\"Ingrese su email:\" \r\n                    placeholderTextColor=\"white\" \r\n                    underlineColorAndroid=\"white\"\r\n                    onChangeText={(text) => onChange(text, 'email')}\r\n                    value={email}\r\n                    color=\"white\"\r\n                    selectionColor=\"white\"\r\n                    onSubmitEditing={onLoginPress}\r\n                    autoCapitalize=\"none\"\r\n                    autoCorrect={false}\r\n                />\r\n                <Text style={ loginStyles.label }>Contrase√±a:</Text>\r\n                <TextInput \r\n                    style={loginStyles.input} \r\n                    placeholder=\"******\" \r\n                    placeholderTextColor=\"white\" \r\n                    underlineColorAndroid=\"white\"\r\n                    secureTextEntry={true}\r\n                    onChangeText={(text) => onChange(text, 'password')}\r\n                    value={password}\r\n                    selectionColor=\"white\"\r\n                    onSubmitEditing={onLoginPress}\r\n                    autoCapitalize=\"none\"\r\n                    autoCorrect={false}\r\n                />\r\n                <View style={loginStyles.buttonContainer}>\r\n                    <TouchableOpacity \r\n                        style={loginStyles.button} \r\n                        onPress={() => navigation.navigate('MenuScreen')}\r\n                    >\r\n                        <Text style={loginStyles.buttonText}>Iniciar Sesion</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n                <View style={loginStyles.buttonContainer}>\r\n                    <TouchableOpacity \r\n                        style={loginStyles.button} \r\n                        onPress={() => navigation.navigate('RegisterScreen') }\r\n                    >\r\n                        <Text style={loginStyles.buttonText}>Nueva Cuenta</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n                \r\n            </KeyboardAvoidingView>\r\n\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}