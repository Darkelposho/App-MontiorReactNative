{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { createContext, useEffect, useReducer } from \"react\";\nimport loginApi from \"../api/loginApi\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { authReducer } from \"./AuthReducer\";\nvar AuthInitialState = {\n  status: 'cheking',\n  errorMessage: '',\n  token: null,\n  user: null\n};\nexport var AuthContext = createContext({});\nexport var AuthProvider = function AuthProvider(_ref) {\n  var children = _ref.children;\n\n  var _useReducer = useReducer(authReducer, AuthInitialState),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  useEffect(function () {\n    checkToken();\n  }, []);\n\n  var checkToken = function checkToken() {\n    var token, resp;\n    return _regeneratorRuntime.async(function checkToken$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('token'));\n\n          case 2:\n            token = _context.sent;\n\n            if (token) {\n              _context.next = 5;\n              break;\n            }\n\n            return _context.abrupt(\"return\", dispatch({\n              type: 'notAuthenticated'\n            }));\n\n          case 5:\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(loginApi.get('/auth'));\n\n          case 7:\n            resp = _context.sent;\n\n            if (!(resp.status !== 200)) {\n              _context.next = 10;\n              break;\n            }\n\n            return _context.abrupt(\"return\", dispatch({\n              type: 'notAuthenticated'\n            }));\n\n          case 10:\n            _context.next = 12;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('token', resp.data.token));\n\n          case 12:\n            dispatch({\n              type: 'signUp',\n              payload: {\n                token: resp.data.token,\n                user: resp.data.usuario\n              }\n            });\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var signIn = function signIn(_ref2) {\n    var email, password, _await$loginApi$post, data;\n\n    return _regeneratorRuntime.async(function signIn$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            email = _ref2.email, password = _ref2.password;\n            console.log(email, password);\n            _context2.prev = 2;\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(loginApi.post('/auth/login', {\n              email: email,\n              password: password\n            }));\n\n          case 5:\n            _await$loginApi$post = _context2.sent;\n            data = _await$loginApi$post.data;\n            dispatch({\n              type: 'signUp',\n              payload: {\n                token: data.token,\n                user: data.usuario\n              }\n            });\n            _context2.next = 10;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('token', data.token));\n\n          case 10:\n            _context2.next = 17;\n            break;\n\n          case 12:\n            _context2.prev = 12;\n            _context2.t0 = _context2[\"catch\"](2);\n            console.log(_context2.t0.response.data.message);\n            console.log(_context2.t0.response.data);\n            dispatch({\n              type: 'addError',\n              payload: _context2.t0.response.data.msg || 'Información incorrecta'\n            });\n\n          case 17:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[2, 12]], Promise);\n  };\n\n  var signUp = function signUp(_ref3) {\n    var name, email, password, _await$loginApi$post2, data;\n\n    return _regeneratorRuntime.async(function signUp$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            name = _ref3.name, email = _ref3.email, password = _ref3.password;\n            _context3.prev = 1;\n            _context3.next = 4;\n            return _regeneratorRuntime.awrap(loginApi.post('/usuarios', {\n              email: email,\n              password: password,\n              name: name\n            }));\n\n          case 4:\n            _await$loginApi$post2 = _context3.sent;\n            data = _await$loginApi$post2.data;\n            dispatch({\n              type: 'signUp',\n              payload: {\n                token: data.token,\n                user: data.usuario\n              }\n            });\n            _context3.next = 9;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('token', data.token));\n\n          case 9:\n            _context3.next = 15;\n            break;\n\n          case 11:\n            _context3.prev = 11;\n            _context3.t0 = _context3[\"catch\"](1);\n            console.log(_context3.t0.response.data);\n            dispatch({\n              type: 'addError',\n              payload: _context3.t0.response.data.errors[0].msg || 'Revise la información'\n            });\n\n          case 15:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[1, 11]], Promise);\n  };\n\n  var logOut = function logOut() {\n    return _regeneratorRuntime.async(function logOut$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.removeItem('token'));\n\n          case 2:\n            dispatch({\n              type: 'logout'\n            });\n\n          case 3:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var removeError = function removeError() {\n    dispatch({\n      type: 'removeError'\n    });\n  };\n\n  return React.createElement(AuthContext.Provider, {\n    value: _objectSpread(_objectSpread({}, state), {}, {\n      signUp: signUp,\n      signIn: signIn,\n      logOut: logOut,\n      removeError: removeError\n    })\n  }, children);\n};","map":{"version":3,"sources":["C:/Users/Memo/Documents/TicsExpo/definitivo/MonitoreoDeClimaCostero/ExpoTics/src/context/AuthContext.tsx"],"names":["React","createContext","useEffect","useReducer","loginApi","AsyncStorage","authReducer","AuthInitialState","status","errorMessage","token","user","AuthContext","AuthProvider","children","state","dispatch","checkToken","getItem","type","get","resp","setItem","data","payload","usuario","signIn","email","password","console","log","post","response","message","msg","signUp","name","errors","logOut","removeItem","removeError"],"mappings":"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","sourcesContent":["import React, { createContext, useEffect, useReducer } from \"react\";\r\nimport loginApi from \"../api/loginApi\";\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { Usuario, LoginResponse, LoginData, RegisterData } from '../interfaces/UsuarioInterface';\r\nimport { authReducer, AuthState } from \"./AuthReducer\";\r\n\r\ntype AutchContextProps = {\r\n    errorMessage: string;\r\n    token: string|null;\r\n    user: Usuario|null;\r\n    status: 'cheking' | 'authenticated' | 'unauthenticated';\r\n    signUp: ( registerData: RegisterData ) => void;\r\n    signIn: ( loginData: LoginData ) => void;\r\n    logOut: () => void;\r\n    removeError: () => void;\r\n}\r\n\r\nconst AuthInitialState: AuthState = {\r\n    status: 'cheking',\r\n    errorMessage: '',\r\n    token: null,\r\n    user: null\r\n}\r\n\r\nexport const AuthContext = createContext({} as AutchContextProps);\r\n\r\nexport const AuthProvider = ({ children }: any) => {\r\n\r\n    const [state, dispatch] = useReducer(authReducer, AuthInitialState)\r\n\r\n    useEffect(() => {\r\n        checkToken();\r\n    }, [])\r\n\r\n    const checkToken = async () => {\r\n        const token = await AsyncStorage.getItem('token');\r\n\r\n        if (!token) return dispatch({ type: 'notAuthenticated' });\r\n\r\n        const resp = await loginApi.get('/auth');\r\n        \r\n        if (resp.status !== 200) {\r\n            return dispatch({ type: 'notAuthenticated' });\r\n        }\r\n\r\n        await AsyncStorage.setItem('token', resp.data.token );\r\n        dispatch({\r\n            type: 'signUp',\r\n            payload: {\r\n                token: resp.data.token,\r\n                user: resp.data.usuario\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    const signIn = async({email, password}: LoginData) => {\r\n        console.log(email, password);\r\n        try {\r\n            const { data } = await loginApi.post<LoginResponse>('/auth/login', {\r\n                email,\r\n                password,  \r\n            });\r\n            dispatch({\r\n                type: 'signUp',\r\n                payload: {\r\n                    token: data.token,\r\n                    user: data.usuario\r\n                }\r\n            });\r\n            await AsyncStorage.setItem('token', data.token);\r\n        } catch (error) {\r\n            console.log(error.response.data.message);\r\n            console.log(error.response.data);\r\n            dispatch({\r\n                type: 'addError',\r\n                payload: error.response.data.msg || 'Información incorrecta'\r\n            })\r\n                    \r\n        }\r\n    };\r\n\r\n    const signUp = async({ name, email, password }: RegisterData) => {\r\n        try{\r\n            const { data } = await loginApi.post<LoginResponse>('/usuarios', { \r\n                email, \r\n                password, \r\n                name \r\n            });\r\n            dispatch({ \r\n                type: 'signUp',\r\n                payload: {\r\n                    token: data.token,\r\n                    user: data.usuario\r\n                }\r\n            });\r\n\r\n            await AsyncStorage.setItem('token', data.token );\r\n\r\n        }catch(error){\r\n            console.log(error.response.data);\r\n            dispatch({ \r\n                type: 'addError', \r\n                payload: error.response.data.errors[0].msg || 'Revise la información'\r\n            });\r\n        }\r\n\r\n    };\r\n    \r\n    const logOut = async() => {\r\n        await AsyncStorage.removeItem('token');\r\n        dispatch({ type: 'logout' });\r\n    };\r\n    const removeError = () => {\r\n        dispatch({\r\n            type: 'removeError'\r\n        })\r\n    };\r\n\r\n    return(\r\n        <AuthContext.Provider value = {{\r\n            ...state,\r\n            signUp,\r\n            signIn,\r\n            logOut,\r\n            removeError,\r\n        }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}