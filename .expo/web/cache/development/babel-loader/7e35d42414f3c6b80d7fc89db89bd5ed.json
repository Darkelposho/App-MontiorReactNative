{"ast":null,"code":"import React, { useContext } from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { LoginScreen } from \"../screens/LoginScreen\";\nimport { MenuLateral } from \"./MenuLateral\";\nimport { RegisterScreen } from \"../screens/RegisterScreen\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { ProtectedScreen } from \"../screens/ProtectedScreen\";\nimport { LoadingScreen } from \"../screens/LoadingScreen\";\nvar Stack = createStackNavigator();\nexport var Login = function Login() {\n  var _useContext = useContext(AuthContext),\n      status = _useContext.status;\n\n  if (status === 'cheking') return React.createElement(LoadingScreen, null);\n  return React.createElement(Stack.Navigator, {\n    initialRouteName: \"LoginScreen\",\n    screenOptions: {\n      headerStyle: {\n        elevation: 0,\n        shadowColor: 'transparent'\n      },\n      cardStyle: {\n        backgroundColor: 'white'\n      }\n    }\n  }, status !== 'authenticated' ? React.createElement(React.Fragment, null, React.createElement(Stack.Screen, {\n    name: \"LoginScreen\",\n    options: {\n      headerShown: false\n    },\n    component: LoginScreen\n  }), React.createElement(Stack.Screen, {\n    name: \"RegisterScreen\",\n    options: {\n      headerShown: false\n    },\n    component: RegisterScreen\n  })) : React.createElement(Stack.Screen, {\n    name: \"ProtectedScreen\",\n    options: {\n      headerShown: false\n    },\n    component: ProtectedScreen\n  }), React.createElement(Stack.Screen, {\n    name: \"MenuScreen\",\n    options: {\n      headerShown: false\n    },\n    component: MenuLateral\n  }));\n};","map":{"version":3,"sources":["C:/Users/Memo/Documents/TicsExpo/MonitoreoDeClimaCostero/ExpoTics/src/navigator/Login.tsx"],"names":["React","useContext","createStackNavigator","LoginScreen","MenuLateral","RegisterScreen","AuthContext","ProtectedScreen","LoadingScreen","Stack","Login","status","headerStyle","elevation","shadowColor","cardStyle","backgroundColor","headerShown"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SAASC,WAAT;AACA,SAASC,WAAT;AACA,SAASC,cAAT;AACA,SAASC,WAAT;AACA,SAASC,eAAT;AACA,SAASC,aAAT;AAUA,IAAMC,KAAK,GAAGP,oBAAoB,EAAlC;AAEA,OAAO,IAAMQ,KAAK,GAAG,SAARA,KAAQ,GAAM;AAEzB,oBAAiBT,UAAU,CAAEK,WAAF,CAA3B;AAAA,MAAOK,MAAP,eAAOA,MAAP;;AAEA,MAAIA,MAAM,KAAK,SAAf,EAA0B,OAAO,oBAAC,aAAD,OAAP;AAE1B,SACE,oBAAC,KAAD,CAAO,SAAP;AACE,IAAA,gBAAgB,EAAC,aADnB;AAEE,IAAA,aAAa,EAAE;AACbC,MAAAA,WAAW,EAAE;AACXC,QAAAA,SAAS,EAAE,CADA;AAEXC,QAAAA,WAAW,EAAE;AAFF,OADA;AAKbC,MAAAA,SAAS,EAAE;AACTC,QAAAA,eAAe,EAAE;AADR;AALE;AAFjB,KAaKL,MAAM,KAAK,eAAZ,GAEI,0CACE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,aAAnB;AAAiC,IAAA,OAAO,EAAE;AAAEM,MAAAA,WAAW,EAAE;AAAf,KAA1C;AAAkE,IAAA,SAAS,EAAGd;AAA9E,IADF,EAEE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,gBAAnB;AAAoC,IAAA,OAAO,EAAE;AAAEc,MAAAA,WAAW,EAAE;AAAf,KAA7C;AAAqE,IAAA,SAAS,EAAGZ;AAAjF,IAFF,CAFJ,GAQI,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,iBAAnB;AAAqC,IAAA,OAAO,EAAE;AAAEY,MAAAA,WAAW,EAAE;AAAf,KAA9C;AAAsE,IAAA,SAAS,EAAGV;AAAlF,IArBR,EAyBU,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,YAAnB;AAAgC,IAAA,OAAO,EAAE;AAAEU,MAAAA,WAAW,EAAE;AAAf,KAAzC;AAAiE,IAAA,SAAS,EAAGb;AAA7E,IAzBV,CADF;AA+BD,CArCM","sourcesContent":["import React, { useContext } from 'react';\r\n\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { LoginScreen } from '../screens/LoginScreen';\r\nimport { MenuLateral } from './MenuLateral';\r\nimport { RegisterScreen } from '../screens/RegisterScreen';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport { ProtectedScreen } from '../screens/ProtectedScreen';\r\nimport { LoadingScreen } from '../screens/LoadingScreen';\r\n\r\nexport type RootStackParams = {\r\n    LoginScreen: undefined,\r\n    RegisterScreen: undefined,\r\n    MenuScreen: undefined,\r\n    ProtectedScreen: undefined,\r\n}\r\n\r\n\r\nconst Stack = createStackNavigator<RootStackParams>();\r\n\r\nexport const Login = () => {\r\n\r\n  const {status} = useContext (AuthContext);\r\n\r\n  if (status === 'cheking') return <LoadingScreen/>;\r\n\r\n  return (\r\n    <Stack.Navigator\r\n      initialRouteName=\"LoginScreen\"\r\n      screenOptions={{\r\n        headerStyle: {\r\n          elevation: 0,\r\n          shadowColor: 'transparent'\r\n        },\r\n        cardStyle: {\r\n          backgroundColor: 'white'\r\n        }\r\n      }}\r\n    >\r\n      {\r\n        (status !== 'authenticated') \r\n        ? (\r\n            <>\r\n              <Stack.Screen name=\"LoginScreen\" options={{ headerShown: false }} component={ LoginScreen } />\r\n              <Stack.Screen name=\"RegisterScreen\" options={{ headerShown: false }} component={ RegisterScreen } />\r\n            </>\r\n        ) \r\n        : (\r\n            <Stack.Screen name=\"ProtectedScreen\" options={{ headerShown: false }} component={ ProtectedScreen } />\r\n        )\r\n      }\r\n\r\n              <Stack.Screen name=\"MenuScreen\" options={{ headerShown: false }} component={ MenuLateral } />\r\n      \r\n      \r\n    </Stack.Navigator>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}