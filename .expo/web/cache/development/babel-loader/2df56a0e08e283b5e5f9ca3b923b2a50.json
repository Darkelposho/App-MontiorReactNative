{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { createContext, useReducer } from \"react\";\nimport { authReducer } from \"./AuthReducer\";\nvar AuthInitialState = {\n  status: 'cheking',\n  errorMessage: '',\n  token: null,\n  user: null\n};\nvar AuthContext = createContext({});\nexport var AuthProvider = function AuthProvider(_ref) {\n  var children = _ref.children;\n\n  var _useReducer = useReducer(authReducer, AuthInitialState),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var signUp = function signUp() {};\n\n  var signIn = function signIn() {};\n\n  var logOut = function logOut() {};\n\n  var removeError = function removeError() {};\n\n  return React.createElement(AuthContext.Provider, {\n    value: _objectSpread(_objectSpread({}, state), {}, {\n      signUp: signUp,\n      signIn: signIn,\n      logOut: logOut,\n      removeError: removeError\n    })\n  }, children);\n};","map":{"version":3,"sources":["C:/Users/Memo/Documents/TicsExpo/TicsExpo/src/context/AuthContext.tsx"],"names":["React","createContext","useReducer","authReducer","AuthInitialState","status","errorMessage","token","user","AuthContext","AuthProvider","children","state","dispatch","signUp","signIn","logOut","removeError"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AAEA,SAASC,WAAT;AAaA,IAAMC,gBAA2B,GAAG;AAChCC,EAAAA,MAAM,EAAE,SADwB;AAEhCC,EAAAA,YAAY,EAAE,EAFkB;AAGhCC,EAAAA,KAAK,EAAE,IAHyB;AAIhCC,EAAAA,IAAI,EAAE;AAJ0B,CAApC;AAOA,IAAMC,WAAW,GAAGR,aAAa,CAAC,EAAD,CAAjC;AAEA,OAAO,IAAMS,YAAY,GAAG,SAAfA,YAAe,OAAuB;AAAA,MAApBC,QAAoB,QAApBA,QAAoB;;AAE/C,oBAA0BT,UAAU,CAACC,WAAD,EAAcC,gBAAd,CAApC;AAAA;AAAA,MAAOQ,KAAP;AAAA,MAAcC,QAAd;;AAEA,MAAMC,MAAM,GAAG,SAATA,MAAS,GAAM,CAAE,CAAvB;;AACA,MAAMC,MAAM,GAAG,SAATA,MAAS,GAAM,CAAE,CAAvB;;AACA,MAAMC,MAAM,GAAG,SAATA,MAAS,GAAM,CAAE,CAAvB;;AACA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM,CAAE,CAA5B;;AAEA,SACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,kCACpBL,KADoB;AAEvBE,MAAAA,MAAM,EAANA,MAFuB;AAGvBC,MAAAA,MAAM,EAANA,MAHuB;AAIvBC,MAAAA,MAAM,EAANA,MAJuB;AAKvBC,MAAAA,WAAW,EAAXA;AALuB;AAA3B,KAOKN,QAPL,CADJ;AAWH,CApBM","sourcesContent":["import React, { createContext, useReducer } from \"react\";\r\nimport { Usuario } from \"../interfaces/UsuarioInterface\";\r\nimport { authReducer, AuthState } from \"./AuthReducer\";\r\n\r\ntype AutchContextProps = {\r\n    errorMessage: string;\r\n    token: string|null;\r\n    user: Usuario|null;\r\n    status: 'cheking' | 'authenticated' | 'unauthenticated';\r\n    signUp: () => void;\r\n    signIn: () => void;\r\n    logOut: () => void;\r\n    removeError: () => void;\r\n}\r\n\r\nconst AuthInitialState: AuthState = {\r\n    status: 'cheking',\r\n    errorMessage: '',\r\n    token: null,\r\n    user: null\r\n}\r\n\r\nconst AuthContext = createContext({} as AutchContextProps);\r\n\r\nexport const AuthProvider = ({ children }: any) => {\r\n\r\n    const [state, dispatch] = useReducer(authReducer, AuthInitialState)\r\n\r\n    const signUp = () => {};\r\n    const signIn = () => {};\r\n    const logOut = () => {};\r\n    const removeError = () => {};\r\n\r\n    return(\r\n        <AuthContext.Provider value = {{\r\n            ...state,\r\n            signUp,\r\n            signIn,\r\n            logOut,\r\n            removeError,\r\n        }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}