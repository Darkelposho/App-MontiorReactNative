{"ast":null,"code":"import React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { styles } from \"../theme/appTheme\";\nimport { getDistance } from 'geolib';\nimport { useLocation } from \"../hooks/useLocation\";\nexport var ClimateData = function ClimateData(_ref) {\n  var channel = _ref.channel,\n      feeds = _ref.feeds;\n\n  var _useLocation = useLocation(),\n      location = _useLocation.location,\n      errorMsg = _useLocation.errorMsg;\n\n  var text = 'Waiting..';\n\n  if (errorMsg) {\n    text = errorMsg;\n  } else if (location) {\n    text = JSON.stringify(location);\n  }\n\n  var calculateDistance = function calculateDistance() {\n    var dis = getDistance({\n      latitude: channel.latitude,\n      longitude: channel.longitude\n    }, {\n      latitude: latitude,\n      longitude: longitude\n    });\n    return dis / 1000;\n  };\n\n  return React.createElement(View, {\n    style: styles.globalMargin\n  }, React.createElement(View, {\n    style: styles.channelData\n  }, React.createElement(Text, {\n    style: styles.title\n  }, channel.description), React.createElement(Text, {\n    style: styles.title\n  }, \"ho\", location.latitude), React.createElement(Text, {\n    style: styles.title\n  }, \"la\", location.longitude)), React.createElement(View, {\n    style: styles.feedData\n  }, React.createElement(Text, {\n    style: styles.title\n  }, \"Latitud: \", channel.latitude), React.createElement(Text, {\n    style: styles.title\n  }, \"Longitud: \", channel.longitude), React.createElement(Text, {\n    style: styles.feedDataText\n  }, \"Temperatura: \", feeds.field5, \"\\xB0C\"), React.createElement(Text, {\n    style: styles.feedDataText\n  }, \"Humedad: \", feeds.field6, \"%\"), React.createElement(Text, {\n    style: styles.feedDataText\n  }, \"Nivel de Agua Maximo: \", feeds.field1, \" Cm\"), React.createElement(Text, {\n    style: styles.feedDataText\n  }, \"Nivel de Agua Minimo: \", feeds.field2), React.createElement(Text, {\n    style: styles.feedDataText\n  }, \"Nivel de Agua Promedio: \", feeds.field3, \" Cm\"), React.createElement(Text, {\n    style: styles.feedDataText\n  }, \"Vientos: \", feeds.field4, \" Km/h\")));\n};","map":{"version":3,"sources":["C:/Users/Memo/Documents/TicsExpo/MonitoreoDeClimaCostero/ExpoTics/src/components/ClimateData.tsx"],"names":["React","styles","getDistance","useLocation","ClimateData","channel","feeds","location","errorMsg","text","JSON","stringify","calculateDistance","dis","latitude","longitude","globalMargin","channelData","title","description","feedData","feedDataText","field5","field6","field1","field2","field3","field4"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAGA,SAASC,MAAT;AACA,SAASC,WAAT,QAA4B,QAA5B;AAEA,SAASC,WAAT;AAQA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAwC;AAAA,MAAtCC,OAAsC,QAAtCA,OAAsC;AAAA,MAA7BC,KAA6B,QAA7BA,KAA6B;;AAE/D,qBAA6BH,WAAW,EAAxC;AAAA,MAAOI,QAAP,gBAAOA,QAAP;AAAA,MAAiBC,QAAjB,gBAAiBA,QAAjB;;AAEA,MAAIC,IAAI,GAAG,WAAX;;AACA,MAAID,QAAJ,EAAc;AACVC,IAAAA,IAAI,GAAGD,QAAP;AACH,GAFD,MAEO,IAAID,QAAJ,EAAc;AACjBE,IAAAA,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAeJ,QAAf,CAAP;AACH;;AAED,MAAMK,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC5B,QAAIC,GAAG,GAAGX,WAAW,CACjB;AAAEY,MAAAA,QAAQ,EAAET,OAAO,CAACS,QAApB;AAA8BC,MAAAA,SAAS,EAAEV,OAAO,CAACU;AAAjD,KADiB,EAEjB;AAAED,MAAAA,QAAQ,EAAEA,QAAZ;AAAuBC,MAAAA,SAAS,EAAEA;AAAlC,KAFiB,CAArB;AAIA,WAAOF,GAAG,GAAC,IAAX;AACH,GAND;;AAOA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIZ,MAAM,CAACe;AAAtB,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIf,MAAM,CAACgB;AAAtB,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEhB,MAAM,CAACiB;AAApB,KAA4Bb,OAAO,CAACc,WAApC,CADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAElB,MAAM,CAACiB;AAApB,WAA8BX,QAAQ,CAACO,QAAvC,CAFJ,EAGI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEb,MAAM,CAACiB;AAApB,WAA8BX,QAAQ,CAACQ,SAAvC,CAHJ,CADJ,EAMI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAId,MAAM,CAACmB;AAAtB,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEnB,MAAM,CAACiB;AAApB,kBAAqCb,OAAO,CAACS,QAA7C,CADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEb,MAAM,CAACiB;AAApB,mBAAsCb,OAAO,CAACU,SAA9C,CAFJ,EAKI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEd,MAAM,CAACoB;AAApB,sBAAgDf,KAAK,CAACgB,MAAtD,UALJ,EAMI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAErB,MAAM,CAACoB;AAApB,kBAA4Cf,KAAK,CAACiB,MAAlD,MANJ,EAQI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEtB,MAAM,CAACoB;AAApB,+BAAyDf,KAAK,CAACkB,MAA/D,QARJ,EASI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEvB,MAAM,CAACoB;AAApB,+BAAyDf,KAAK,CAACmB,MAA/D,CATJ,EAUI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAExB,MAAM,CAACoB;AAApB,iCAA2Df,KAAK,CAACoB,MAAjE,QAVJ,EAYI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEzB,MAAM,CAACoB;AAApB,kBAA4Cf,KAAK,CAACqB,MAAlD,UAZJ,CANJ,CADJ;AAwBH,CA1CM","sourcesContent":["import React from 'react'\r\nimport { Channel, Feed } from '../interfaces/ClimateInterface';\r\nimport { Text, View } from 'react-native';\r\nimport { styles } from '../theme/appTheme';\r\nimport { getDistance } from 'geolib';\r\nimport { Coords } from '../interfaces/LocationInterface';\r\nimport { useLocation } from '../hooks/useLocation';\r\n\r\n\r\ninterface ClimateDataProps { \r\n    channel: Channel;\r\n    feeds: Feed;\r\n}\r\n\r\nexport const ClimateData = ({channel, feeds}: ClimateDataProps) => {\r\n\r\n    const {location, errorMsg} = useLocation();\r\n    \r\n    let text = 'Waiting..';\r\n    if (errorMsg) {\r\n        text = errorMsg;\r\n    } else if (location) {\r\n        text = JSON.stringify(location);\r\n    }\r\n    \r\n    const calculateDistance = () => {\r\n        var dis = getDistance(\r\n            { latitude: channel.latitude, longitude: channel.longitude },\r\n            { latitude: latitude , longitude: longitude }   \r\n          );\r\n        return dis/1000;\r\n    }\r\n    return (\r\n        <View style = {styles.globalMargin}> \r\n            <View style = {styles.channelData}>\r\n                <Text style={styles.title}>{channel.description}</Text>\r\n                <Text style={styles.title}>ho{location.latitude}</Text>\r\n                <Text style={styles.title}>la{location.longitude}</Text>\r\n            </View>\r\n            <View style = {styles.feedData}>\r\n                <Text style={styles.title}>Latitud: {channel.latitude}</Text>\r\n                <Text style={styles.title}>Longitud: {channel.longitude}</Text>\r\n                \r\n\r\n                <Text style={styles.feedDataText}>Temperatura: {feeds.field5}Â°C</Text>  \r\n                <Text style={styles.feedDataText}>Humedad: {feeds.field6}%</Text> \r\n\r\n                <Text style={styles.feedDataText}>Nivel de Agua Maximo: {feeds.field1} Cm</Text> \r\n                <Text style={styles.feedDataText}>Nivel de Agua Minimo: {feeds.field2}</Text>\r\n                <Text style={styles.feedDataText}>Nivel de Agua Promedio: {feeds.field3} Cm</Text>\r\n\r\n                <Text style={styles.feedDataText}>Vientos: {feeds.field4} Km/h</Text>\r\n\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}