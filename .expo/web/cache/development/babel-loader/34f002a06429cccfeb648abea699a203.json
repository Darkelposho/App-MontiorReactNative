{"ast":null,"code":"import React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { styles } from \"../theme/appTheme\";\nexport var ClimateData = function ClimateData(_ref) {\n  var channel = _ref.channel,\n      feeds = _ref.feeds,\n      cords = _ref.cords;\n\n  var calculateDistance = function calculateDistance() {};\n\n  return React.createElement(View, {\n    style: styles.globalMargin\n  }, React.createElement(View, {\n    style: styles.channelData\n  }, React.createElement(Text, {\n    style: styles.title\n  }, channel.description), React.createElement(Text, {\n    style: styles.title\n  }, cords.latitude), React.createElement(Text, {\n    style: styles.title\n  }, cords.longitude)), React.createElement(View, {\n    style: styles.feedData\n  }, React.createElement(Text, {\n    style: styles.title\n  }, \"Latitud: \", channel.latitude), React.createElement(Text, {\n    style: styles.title\n  }, \"Longitud: \", channel.longitude), React.createElement(Text, {\n    style: styles.feedDataText\n  }, \"Temperatura: \", feeds.field5, \"\\xB0C\"), React.createElement(Text, {\n    style: styles.feedDataText\n  }, \"Humedad: \", feeds.field6, \"%\"), React.createElement(Text, {\n    style: styles.feedDataText\n  }, \"Nivel de Agua Maximo: \", feeds.field1, \" Cm\"), React.createElement(Text, {\n    style: styles.feedDataText\n  }, \"Nivel de Agua Minimo: \", feeds.field2), React.createElement(Text, {\n    style: styles.feedDataText\n  }, \"Nivel de Agua Promedio: \", feeds.field3, \" Cm\"), React.createElement(Text, {\n    style: styles.feedDataText\n  }, \"Vientos: \", feeds.field4, \" Km/h\")));\n};","map":{"version":3,"sources":["C:/Users/Memo/Documents/TicsExpo/MonitoreoDeClimaCostero/ExpoTics/src/components/ClimateData.tsx"],"names":["React","styles","ClimateData","channel","feeds","cords","calculateDistance","globalMargin","channelData","title","description","latitude","longitude","feedData","feedDataText","field5","field6","field1","field2","field3","field4"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAGA,SAASC,MAAT;AAWA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAA+C;AAAA,MAA7CC,OAA6C,QAA7CA,OAA6C;AAAA,MAApCC,KAAoC,QAApCA,KAAoC;AAAA,MAA7BC,KAA6B,QAA7BA,KAA6B;;AAEtE,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM,CAM/B,CAND;;AAOA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIL,MAAM,CAACM;AAAtB,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIN,MAAM,CAACO;AAAtB,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEP,MAAM,CAACQ;AAApB,KAA4BN,OAAO,CAACO,WAApC,CADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAET,MAAM,CAACQ;AAApB,KAA4BJ,KAAK,CAACM,QAAlC,CAFJ,EAGI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEV,MAAM,CAACQ;AAApB,KAA4BJ,KAAK,CAACO,SAAlC,CAHJ,CADJ,EAMI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIX,MAAM,CAACY;AAAtB,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEZ,MAAM,CAACQ;AAApB,kBAAqCN,OAAO,CAACQ,QAA7C,CADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEV,MAAM,CAACQ;AAApB,mBAAsCN,OAAO,CAACS,SAA9C,CAFJ,EAKI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEX,MAAM,CAACa;AAApB,sBAAgDV,KAAK,CAACW,MAAtD,UALJ,EAMI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEd,MAAM,CAACa;AAApB,kBAA4CV,KAAK,CAACY,MAAlD,MANJ,EAQI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEf,MAAM,CAACa;AAApB,+BAAyDV,KAAK,CAACa,MAA/D,QARJ,EASI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEhB,MAAM,CAACa;AAApB,+BAAyDV,KAAK,CAACc,MAA/D,CATJ,EAUI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEjB,MAAM,CAACa;AAApB,iCAA2DV,KAAK,CAACe,MAAjE,QAVJ,EAYI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAElB,MAAM,CAACa;AAApB,kBAA4CV,KAAK,CAACgB,MAAlD,UAZJ,CANJ,CADJ;AAwBH,CAjCM","sourcesContent":["import React from 'react'\r\nimport { Channel, Feed } from '../interfaces/ClimateInterface';\r\nimport { Text, View } from 'react-native';\r\nimport { styles } from '../theme/appTheme';\r\nimport { getDistance } from 'geolib';\r\nimport { Coords } from '../interfaces/LocationInterface';\r\n\r\n\r\ninterface ClimateDataProps { \r\n    channel: Channel;\r\n    feeds: Feed;\r\n    cords: Coords;\r\n}\r\n\r\nexport const ClimateData = ({channel, feeds, cords}: ClimateDataProps) => {\r\n    \r\n    const calculateDistance = () => {\r\n        /* var dis = getDistance(\r\n            { latitude: channel.latitude, longitude: channel.longitude },\r\n            { latitude: cords.latitude , longitude: cords.longitude }   \r\n          );\r\n        return dis/1000; */\r\n    }\r\n    return (\r\n        <View style = {styles.globalMargin}> \r\n            <View style = {styles.channelData}>\r\n                <Text style={styles.title}>{channel.description}</Text>\r\n                <Text style={styles.title}>{cords.latitude}</Text>\r\n                <Text style={styles.title}>{cords.longitude}</Text>\r\n            </View>\r\n            <View style = {styles.feedData}>\r\n                <Text style={styles.title}>Latitud: {channel.latitude}</Text>\r\n                <Text style={styles.title}>Longitud: {channel.longitude}</Text>\r\n                \r\n\r\n                <Text style={styles.feedDataText}>Temperatura: {feeds.field5}Â°C</Text>  \r\n                <Text style={styles.feedDataText}>Humedad: {feeds.field6}%</Text> \r\n\r\n                <Text style={styles.feedDataText}>Nivel de Agua Maximo: {feeds.field1} Cm</Text> \r\n                <Text style={styles.feedDataText}>Nivel de Agua Minimo: {feeds.field2}</Text>\r\n                <Text style={styles.feedDataText}>Nivel de Agua Promedio: {feeds.field3} Cm</Text>\r\n\r\n                <Text style={styles.feedDataText}>Vientos: {feeds.field4} Km/h</Text>\r\n\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}